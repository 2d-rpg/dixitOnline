{"ast":null,"code":"import { Utils } from './utils.js';\nexport class Init {\n  static do(socket) {\n    socket.emit('init');\n    console.log('[debug] init状態');\n  }\n  /** エントリーフォーム送信時 */\n\n\n  static entry(event, socket, context, canvas) {\n    var username = document.getElementById(\"userName\").value; // 名前入力フォーム非表示\n\n    document.getElementById(\"entryForm\").style.display = 'none'; //とりあえずcanvas非表示設定にしてあります\n    // Utils.clearDisplay();\n    // const fontSize = 20;\n    // context.font = fontSize + 'px Bold Arial';\n    // const message = '参加者が集まるまでしばらくお待ちください';\n    // // メッセージをcanvas中央に配置\n    // context.fillText(message, canvas.width / 2 - message.length * fontSize / 2, canvas.height / 2 - fontSize / 2);\n\n    const message = '参加者が集まるまでしばらくお待ちください';\n    document.getElementById('progress').innerHTML = message; // サーバーに'entry'を送信\n\n    socket.emit('entry', {\n      username: username\n    });\n    event.preventDefault(); // フォームによる/?への接続を止める(socketIDを一意に保つため)\n  }\n\n}","map":{"version":3,"sources":["/Users/shibainu/Documents/projects/Javascript/dixitOnline/src/modules/stage/client/init.js"],"names":["Utils","Init","do","socket","emit","console","log","entry","event","context","canvas","username","document","getElementById","value","style","display","message","innerHTML","preventDefault"],"mappings":"AACA,SAAQA,KAAR,QAAoB,YAApB;AAEA,OAAO,MAAMC,IAAN,CAAW;AAEd,SAAOC,EAAP,CAAUC,MAAV,EAAkB;AACdA,IAAAA,MAAM,CAACC,IAAP,CAAY,MAAZ;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACH;AAED;;;AACA,SAAOC,KAAP,CAAaC,KAAb,EAAoBL,MAApB,EAA4BM,OAA5B,EAAqCC,MAArC,EAA6C;AACzC,QAAIC,QAAQ,GAAGC,QAAQ,CAACC,cAAT,CAAwB,UAAxB,EAAoCC,KAAnD,CADyC,CAEzC;;AACAF,IAAAA,QAAQ,CAACC,cAAT,CAAwB,WAAxB,EAAqCE,KAArC,CAA2CC,OAA3C,GAAqD,MAArD,CAHyC,CAKzC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,UAAMC,OAAO,GAAG,sBAAhB;AACAL,IAAAA,QAAQ,CAACC,cAAT,CAAwB,UAAxB,EAAoCK,SAApC,GAAgDD,OAAhD,CAdyC,CAgBzC;;AACAd,IAAAA,MAAM,CAACC,IAAP,CAAY,OAAZ,EAAqB;AAACO,MAAAA,QAAQ,EAAGA;AAAZ,KAArB;AACAH,IAAAA,KAAK,CAACW,cAAN,GAlByC,CAkBjB;AAC3B;;AA3Ba","sourcesContent":["\nimport {Utils} from './utils.js'\n\nexport class Init {\n\n    static do(socket) {\n        socket.emit('init');\n        console.log('[debug] init状態');\n    }\n\n    /** エントリーフォーム送信時 */\n    static entry(event, socket, context, canvas) {\n        var username = document.getElementById(\"userName\").value;\n        // 名前入力フォーム非表示\n        document.getElementById(\"entryForm\").style.display = 'none';\n\n        //とりあえずcanvas非表示設定にしてあります\n        // Utils.clearDisplay();\n        // const fontSize = 20;\n        // context.font = fontSize + 'px Bold Arial';\n        // const message = '参加者が集まるまでしばらくお待ちください';\n        // // メッセージをcanvas中央に配置\n        // context.fillText(message, canvas.width / 2 - message.length * fontSize / 2, canvas.height / 2 - fontSize / 2);\n\n        const message = '参加者が集まるまでしばらくお待ちください';\n        document.getElementById('progress').innerHTML = message;\n\n        // サーバーに'entry'を送信\n        socket.emit('entry', {username : username});\n        event.preventDefault(); // フォームによる/?への接続を止める(socketIDを一意に保つため)\n    }\n}"]},"metadata":{},"sourceType":"module"}